def get_trim_params(wildcards):
    '''
    accessory for Trimmomatic
    retrieves settings from config file and translates into Trimmomatic call
    '''
    file = f"GM{wildcards.sample}"
    run = config["setup"]["run"]
    threads = config["trim"]["threads"]
    basein = baseout = file

    phred = config['setup']['phred']
    if run == "SE":
        filein = f"{file}.fastq"
        fileout = f"{file}.trim.fastq"
    else:
        filein = f"fastq/{file}-1.fastq fastq/{file}-2.fastq"
        fileout = f"fastq_trim/{file}-1_trim.fastq fastq_trim/{file}-1_trim_UP.fastq fastq_trim/{file}-2_trim.fastq fastq_trim/{file}-2_trim_UP.fastq"

    return f"{run} -phred{phred} -threads {threads} -trimlog fastq_trim/trimlog{wildcards.sample} {filein} {fileout} {config['trim']['mode']}"


rule trim_fastq:
    input: expand("/fast/users/szyskam_c/work/tutorial/whRNASeq/fastq/GM{{sample}}-{read}.fastq", read=config['reads'])
    output: expand("fastq_trim/GM{{sample}}-{read}_{trim}.fastq", read=config['reads'], trim=['trim', 'trim_UP'])
    params: get_trim_params
    run:
# for file in get_file_list(fastq_path, '.fastq'):
        shell("trimmomatic {params}")   

